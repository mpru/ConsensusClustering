% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ConsensusClusteringCode.R
\name{consensusClustering}
\alias{consensusClustering}
\title{The consensusClustering function}
\usage{
consensusClustering(dataMatrix, K = 2:3, nIters = 30, propSamples = 0.8,
  clusterAlgorithm = "Kmeans", verbose = TRUE, seed = NULL,
  saveResults = FALSE, pathOutput = "", finalLinkage = "average",
  PACLowerLim = 0.1, PACUpperLim = 0.9, plotHeatmaps = c("both",
  "consensus", "data", "no"), plotSave = c("no", "pdf", "bmp", "png", "ps"),
  showDendrogram = TRUE, showSamplesNames = TRUE,
  showFeaturesNames = TRUE, plotCDF = TRUE, plotTracking = TRUE,
  consensusStats = TRUE, consensusStatsPlots = TRUE)
}
\arguments{
\item{dataMatrix}{matrix or data frame with data to cluster, samples/items in the columns and features in the rows.}

\item{K}{vector of integers representing numbeer of clusters to evaluate. It can be of length 1 and it does not need to consist of consecutive integers. For example, either of \code{K = 4}, \code{K = 2:5} or \code{K = c(5, 10, 15)} would work.}

\item{nIters}{number of iterations (bootstrap samples).}

\item{propSamples}{proportion of items to sample in each bootstrap sample.}

\item{clusterAlgorithm}{algorithm to perform the clustering, for the moment only K-means is available.}

\item{verbose}{logical, print progress messages to screen. During the bootstrap iterations, a report to monitor the progress is created in \code{pathOutput}.}

\item{seed}{numerical value to set random seed for reproducible results. It uses \code{doRNG} package to guarantee reproducible results even when running in parallel.}

\item{saveResults}{logical indicating if the output should be saved as an .rds file in the directory \code{pathOutput}.}

\item{pathOutput}{directory for output files and iterations progress report, the current working directory by default.}

\item{finalLinkage}{heirarchical linkage method for producing a final classification with the consensus indexes generated by the bootstrap samples.}

\item{PACLowerLim}{lower limit for the interval of ambiguous clustering used for calculating PAC score, belongs to the interval (0, 1).}

\item{PACUpperLim}{upper limit for the interval of ambiguous clustering used for calculating PAC score, belongs to the interval (0, 1).}

\item{plotHeatmaps}{character string indicating which heatmaps should be produced: "consensus" (only heatmap of the consensus indexes), "data" (only heatmap of input data set), "both" (default), or "no" (no plot is produced).}

\item{plotSave}{character string indicating the format the plot to be saved as files in directory \code{pathOutput}. Default is "no", the plots are not saved, but printed to the screen. Other options are: "pdf", "bmp", "png", "ps".}

\item{showDendrogram}{logical indicating if dendrograms should be plotted in the heatmaps (defaults to TRUE).}

\item{showSamplesNames}{logical indicating if sample names should be displayed in the plots (defaults to TRUE).}

\item{showFeaturesNames}{logical indicating if features names should be displayed in the plots (defaults to TRUE).}

\item{plotCDF}{logical indicating if the plot for the Cumulative Distribution Function (CDF) of the consensus indexes and for the relative change under the CDF should be produced. The second plot is not produced if \code{length(K) == 1}, since there is no comparison to be made. If \code{plotCDF == TRUE}, a vector with the area under the CDF curve for each K is returned.}

\item{plotTracking}{logical indicating if the plot with the tracking of samples through different values of K should be produced. No tracking plot is produced if \code{length(K) == 1}, since there is no tracking to be done.}

\item{consensusStats}{logical indicating if consensus statistics should be computed.}

\item{consensusStatsPlots}{logical indicating if plots of consensus statistics should be produced (only considered if \code{consensusStats == TRUE}).}
}
\value{
A list with the results of the consensus clustering. The first elements of the list correspond to each value of K evaluated, each
one containing:
\itemize{
 \item \code{consensusTree}: final heirarchical tree based on the matrix of consensus indexes after running all the iterations of the clustering.
 \item \code{consensusClass}: vector with the final cluster assignment for each sample.
 \item \code{consensusVector}: vector of consensus indexes for each pair of samples. The consensus index is the proportion of times that a pair of samples 
 was clustered together in the same group, out of the total number times they were in the same bootstrap sample.
}
The following elements of the list returned are:
\itemize{
 \item \code{PACscores}: vector with the Proportion of Ambiguous Clustering score (PAC) for each value of K evaluated. The PAC score 
 is the fraction of sample pairs with consensus index values falling in the intermediate sub-interval (PACLowerLim, PACUpperLim), by default (0.1, 0.9).
 Lower PAC score is indicative of robustness.
 \item \code{colorTracking}: list with clusters and samples color assignment for each K. If \code{length(K) > 1} colors are assigned tracking samples
 across different values of K, letting the user track the history of clusters relative to earlier clusters.
}
The list returned may also include the following elements if the correspondent arguments were set to TRUE:
\itemize{
 \item \code{areaUnderCDF}: if \code{plotCDF == TRUE}, vector with area under the CDF curve for each K, see \link{PlotCDF}.
 \item \code{consensusStats}: if \code{consensusStats == TRUE}, list with consensus statistics, see \link{ConsensusStatsAndPlots}.
}
}
\description{
Runs Consensus Clustering for class discovery and clustering validation.
}
\details{
Consensus Clustering is a revised tool for implementing the methodology for class discovery and clustering validation, based off of 2003 Monti's paper. 
This method is used to find a consensus assignment across multiple runs of a clustering approach, allowing one to assess and 
validate the stability of the discovered clusters empirically. The objective of this method is to identify robust clusters
 in the context of genomic data, but is applicable for any unsupervised learning task.
 
This function is parallelizad under the unifying paradigm, so it will automatically detect clusters or cores registered by the user before hand or will run sequentially if no parallel capabilities are available. Reproducible results are guaranteed when running in parallel if a \code{seed} is provided, through the use of the \code{doRNG} package.
}
\examples{
mat <- matrix(rnorm(10*6), 10, 6)
result <- consensusClustering(mat, nIters = 5)

}
\keyword{class_discovery}
\keyword{consensus}
\keyword{robust_clustering}
\keyword{unsupervised_learning}

